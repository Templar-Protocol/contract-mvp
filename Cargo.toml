[workspace]
members = [".", "common", "mock/*", "test-utils"]

[workspace.dependencies]
near-sdk = { version = "5.7", features = ["unstable"] }
near-contract-standards = "5.7"
near-workspaces = { version = "0.16", features = ["unstable"] }
rstest = { version = "0.24" }
templar-common = { path = "./common" }
test-utils = { path = "./test-utils" }
thiserror = "2.0.11"
tokio = { version = "1.30.0", features = ["full"] }

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
must_use_candidate = "allow"
large_futures = "allow"
redundant_closure_for_method_calls = "allow"
module_name_repetitions = "allow"
unwrap_used = "warn"
expect_used = "warn"

[package]
name = "contract-mvp"
description = "cargo-near-new-project-description"
version = "0.1.0"
edition = "2021"
# TODO: Fill out the repository field to help NEAR ecosystem tools to discover your project.
# NEP-0330 is automatically implemented for all contracts built with https://github.com/near/cargo-near.
# Link to the repository will be available via `contract_source_metadata` view-function.
repository = "https://github.com/<xxx>/<xxx>"

[lib]
crate-type = ["cdylib", "rlib"]

# fields to configure build with WASM reproducibility, according to specs
# in https://github.com/near/NEPs/blob/master/neps/nep-0330.md
[package.metadata.near.reproducible_build]
# docker image, descriptor of build environment
image = "sourcescan/cargo-near:git-e3c8adb4b5542cbfc159bb1534f2b94c900c1648-1.80.0"
# tag after colon above serves only descriptive purpose; image is identified by digest
image_digest = "sha256:4bbcdf985936e1cb9b71c627a00cb9b53546ac0c9ef6b175da2918c1dea21363"
# build command inside of docker container
# if docker image from default gallery is used https://hub.docker.com/r/sourcescan/cargo-near/tags,
# the command may be any combination of flags of `cargo-near`,
# supported by respective version of binary inside the container besides `--no-locked` flag
container_build_command = ["cargo", "near", "build"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
near-sdk.workspace = true
near-contract-standards.workspace = true
templar-common.workspace = true

[dev-dependencies]
near-sdk = { workspace = true, features = ["unit-testing"] }
near-workspaces.workspace = true
rstest.workspace = true
test-utils.workspace = true
tokio.workspace = true

[profile.release]
codegen-units = 1
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
debug = false
panic = "abort"
# Opt into extra safety checks on arithmetic operations https://stackoverflow.com/a/64136471/249801
overflow-checks = true

[lints]
workspace = true
